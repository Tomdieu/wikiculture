apiVersion: apps/v1
kind: Deployment
metadata:
  name: articles-service
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 10
  replicas: 1
  selector:
    matchLabels:
      app: articles-service
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: articles-service
    spec:
      containers:
        - name: articles-service
          image: ghcr.io/tomdieu/wikiculture/article_service:latest
          ports:
            - containerPort: 8001
          command:
            ["gunicorn", "articles.wsgi:application", "--bind", "0.0.0.0:8001"]
          volumeMounts:
            - name: articles-volume
              mountPath: /article
          env:
            - name: RABBITMQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: RABBITMQ_USERNAME
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: RABBITMQ_PASSWORD
          envFrom:
            - configMapRef:
                name: rabbitmq-config
        - name: consumer
          image: ghcr.io/tomdieu/wikiculture/article_service:latest
          command: ["python", "consumer.py"]
          volumeMounts:
            - name: articles-volume
              mountPath: /articles
          env:
            - name: RABBITMQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: RABBITMQ_USERNAME
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: RABBITMQ_PASSWORD
          envFrom:
            - configMapRef:
                name: rabbitmq-config
          resources:
            requests:
              cpu: 600m
      volumes:
        - name: articles-volume
          emptyDir: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 3
